<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="review">
	
	<select id="sequence" resultType="int">
		select review_seq.nextval from dual
	</select>
	
	<!-- 등록 -->
	<insert id="save">
		insert into review (
			review_no, member_id, member_nickname, 
			movie_no, review_content
		) 
		values (
			#{reviewNo}, #{memberId}, #{memberNickname}, 
			#{movieNo}, #{reviewContent}
		)
	</insert>
	
	<!-- 수정 -->
	<update id="edit">
		update review 
		<set>
			<if test="reviewContent !=null"> review_content = #{reviewContent},</if>
		</set> 
		where review_no = #{reviewNo}
	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteByReviewNo">
		delete from review where review_no = #{reviewNo}
	</delete>
	
	<!-- 영화 번호로 상위 좋아요 10개 조회 (상세 리뷰 리스트 출력용)-->
	<select id="findAllByMovieNo" resultType="reviewDto">
		select * from (
			select rownum rn, TMP.* from(
				select * from review where movie_no = #{movieNo} order by review_like_count desc
			)TMP
		) where rn between 1 and 10
	</select>
	
	<!-- 기준별 리스트 -->
	<!-- 최신순 -->
	<select id="findByDateDesc" resultType="ReviewListVO">
		select DISTINCT * from review_list where movie_no = #{movieNo} order by review_date desc
	</select>
	
	<!-- 오래된순 -->
	<select id="findByDateAsc" resultType="ReviewListVO">
		select DISTINCT * from review_list where movie_no = #{movieNo}  order by review_date asc
	</select>
	
	<!-- 좋아요순 -->
	<select id="findByLikeDesc" resultType="ReviewListVO">
		select DISTINCT * from review_list where movie_no = #{movieNo}  order by review_like_count desc
	</select>
	
	<!-- 평점높은순 -->
	<select id="findByRatingDesc" resultType="ReviewListVO">
		select DISTINCT * from review_list where movie_no = #{movieNo}  order by rating_score desc
	</select>
	
	<!-- 평점낮은순 -->
	<select id="findByRatingAsc" resultType="ReviewListVO">
		select DISTINCT * from review_list where movie_no = #{movieNo}  order by rating_score asc
	</select>
	
	<!-- 상세조회 -->
	<select id="findByReviewNo" resultType="ReviewListVO">
		select DISTINCT * from review_list where review_no = #{reviewNo}
	</select>

	<!-- 영화에 달린 리뷰 조회 -->
	<select id="findReviewNoByMovie" resultType="ReviewListVO">
	    select DISTINCT review_no from review_list where movie_no = #{movieNo}
	</select>
	
	<!-- 좋아요 개수 조회 -->
	<select id="findReviewLikeCount" resultType="int">
		select count(*) from review_like where review_no = #{reviewNo}
	</select>
	<!-- 관리자 리뷰 리스트 조회 -->
	<select id="adminReviewList" resultType="AdminReviewListVO">
		select * from admin_review_list order by review_no desc
	</select>
	
	<!-- 리뷰 번호로 회원 아이디 조회 -->
	<select id="findMemberIdByReviewNo" resultType="String">
		SELECT member_id FROM review WHERE review_no = #{reviewNo};
	</select>
	
	<!-- 댓글 수 조회 -->
	<select id="findReplyCount" resultType="int">
		select review_like_count from review where review_no = #{reviewNo]
	</select>
	
</mapper>